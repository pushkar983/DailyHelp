{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ppush\\\\Documents\\\\Cline\\\\Homemaker\\\\frontend\\\\src\\\\components\\\\ProteinTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { getAllProteinLogs, createProteinLog, deleteProteinLog } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProteinTracker() {\n  _s();\n  const [proteinLogs, setProteinLogs] = useState([]);\n  const [newProteinLog, setNewProteinLog] = useState({\n    amount: '',\n    date: ''\n  });\n  const [totalToday, setTotalToday] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProteinLogs = async () => {\n      try {\n        setLoading(true);\n        const data = await getAllProteinLogs();\n        setProteinLogs(data);\n        calculateTotalToday(data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load protein logs. Please try again later.');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchProteinLogs();\n  }, []);\n  const calculateTotalToday = logs => {\n    const today = new Date().toISOString().split('T')[0];\n    const sum = logs.filter(log => log.date === today).reduce((acc, log) => acc + parseFloat(log.amount || 0), 0);\n    setTotalToday(sum.toFixed(2));\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewProteinLog({\n      ...newProteinLog,\n      [name]: value\n    });\n  };\n  const handleAddProteinLog = async () => {\n    if (newProteinLog.amount && newProteinLog.date) {\n      try {\n        const savedLog = await createProteinLog({\n          amount: parseFloat(newProteinLog.amount),\n          date: newProteinLog.date\n        });\n        setProteinLogs([...proteinLogs, savedLog]);\n        setNewProteinLog({\n          amount: '',\n          date: ''\n        });\n        calculateTotalToday([...proteinLogs, savedLog]);\n      } catch (err) {\n        setError('Failed to add protein log. Please try again.');\n        console.error(err);\n      }\n    }\n  };\n  const handleDeleteProteinLog = async id => {\n    try {\n      await deleteProteinLog(id);\n      const updatedLogs = proteinLogs.filter(log => log.id !== id);\n      setProteinLogs(updatedLogs);\n      calculateTotalToday(updatedLogs);\n    } catch (err) {\n      setError('Failed to delete protein log. Please try again.');\n      console.error(err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"protein-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Protein Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading protein logs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 71\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"protein-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Protein Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-protein\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        value: newProteinLog.amount,\n        onChange: handleInputChange,\n        placeholder: \"Amount (g)\",\n        step: \"0.1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: newProteinLog.date,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProteinLog,\n        children: \"Add Protein Intake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"protein-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Today's Total: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [totalToday, \"g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"protein-list\",\n      children: proteinLogs.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount (g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: proteinLogs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-btn\",\n                onClick: () => handleDeleteProteinLog(log.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, log.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No protein intake recorded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(ProteinTracker, \"2c9tA2u6mX94EFWWFLiU75O8JTc=\");\n_c = ProteinTracker;\nexport default ProteinTracker;\nvar _c;\n$RefreshReg$(_c, \"ProteinTracker\");","map":{"version":3,"names":["React","useState","useEffect","getAllProteinLogs","createProteinLog","deleteProteinLog","jsxDEV","_jsxDEV","ProteinTracker","_s","proteinLogs","setProteinLogs","newProteinLog","setNewProteinLog","amount","date","totalToday","setTotalToday","loading","setLoading","error","setError","fetchProteinLogs","data","calculateTotalToday","err","console","logs","today","Date","toISOString","split","sum","filter","log","reduce","acc","parseFloat","toFixed","handleInputChange","e","name","value","target","handleAddProteinLog","savedLog","handleDeleteProteinLog","id","updatedLogs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","step","onClick","length","map","_c","$RefreshReg$"],"sources":["C:/Users/ppush/Documents/Cline/Homemaker/frontend/src/components/ProteinTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport { getAllProteinLogs, createProteinLog, deleteProteinLog } from '../services/api';\r\n\r\nfunction ProteinTracker() {\r\n  const [proteinLogs, setProteinLogs] = useState([]);\r\n  const [newProteinLog, setNewProteinLog] = useState({ amount: '', date: '' });\r\n  const [totalToday, setTotalToday] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProteinLogs = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getAllProteinLogs();\r\n        setProteinLogs(data);\r\n        calculateTotalToday(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to load protein logs. Please try again later.');\r\n        setLoading(false);\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchProteinLogs();\r\n  }, []);\r\n\r\n  const calculateTotalToday = (logs) => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    const sum = logs\r\n      .filter(log => log.date === today)\r\n      .reduce((acc, log) => acc + parseFloat(log.amount || 0), 0);\r\n    setTotalToday(sum.toFixed(2));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewProteinLog({ ...newProteinLog, [name]: value });\r\n  };\r\n\r\n  const handleAddProteinLog = async () => {\r\n    if (newProteinLog.amount && newProteinLog.date) {\r\n      try {\r\n        const savedLog = await createProteinLog({\r\n          amount: parseFloat(newProteinLog.amount),\r\n          date: newProteinLog.date\r\n        });\r\n        setProteinLogs([...proteinLogs, savedLog]);\r\n        setNewProteinLog({ amount: '', date: '' });\r\n        calculateTotalToday([...proteinLogs, savedLog]);\r\n      } catch (err) {\r\n        setError('Failed to add protein log. Please try again.');\r\n        console.error(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteProteinLog = async (id) => {\r\n    try {\r\n      await deleteProteinLog(id);\r\n      const updatedLogs = proteinLogs.filter(log => log.id !== id);\r\n      setProteinLogs(updatedLogs);\r\n      calculateTotalToday(updatedLogs);\r\n    } catch (err) {\r\n      setError('Failed to delete protein log. Please try again.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"protein-container\"><h2>Protein Tracker</h2><p>Loading protein logs...</p></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"protein-container\">\r\n      <h2>Protein Tracker</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <div className=\"add-protein\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={newProteinLog.amount}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Amount (g)\"\r\n          step=\"0.1\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={newProteinLog.date}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddProteinLog}>Add Protein Intake</button>\r\n      </div>\r\n      <div className=\"protein-summary\">\r\n        <p>Today's Total: <strong>{totalToday}g</strong></p>\r\n      </div>\r\n      <div className=\"protein-list\">\r\n        {proteinLogs.length > 0 ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Amount (g)</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {proteinLogs.map(log => (\r\n                <tr key={log.id}>\r\n                  <td>{log.date}</td>\r\n                  <td>{log.amount}</td>\r\n                  <td>\r\n                    <button className=\"delete-btn\" onClick={() => handleDeleteProteinLog(log.id)}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>No protein intake recorded yet.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProteinTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ppush\\\\Documents\\\\Cline\\\\Homemaker\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    // Initial bot message\n    setMessages([{\n      sender: 'bot',\n      text: \"Hello! I'm your Homemaker assistant. How can I help you today? You can ask about expenses, groceries, salary, protein, or water intake.\"\n    }]);\n  }, []);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (input.trim()) {\n      const userMessage = {\n        sender: 'user',\n        text: input\n      };\n      setMessages([...messages, userMessage]);\n      setInput('');\n      // Simulate bot response\n      setTimeout(() => {\n        const botResponse = generateBotResponse(input);\n        setMessages(prevMessages => [...prevMessages, botResponse]);\n      }, 500);\n    }\n  };\n  const generateBotResponse = userInput => {\n    const lowerInput = userInput.toLowerCase();\n    let responseText = \"I'm not sure how to help with that. Can you be more specific?\";\n    if (lowerInput.includes('expense')) {\n      responseText = \"I can help with tracking your expenses. Would you like to add a new expense or view your expense summary?\";\n    } else if (lowerInput.includes('grocery') || lowerInput.includes('groceries')) {\n      responseText = \"I can manage your grocery list. Do you want to add items to your shopping list or check your inventory?\";\n    } else if (lowerInput.includes('salary') || lowerInput.includes('income')) {\n      responseText = \"I can record your income. Would you like to add a new income entry or view your income history?\";\n    } else if (lowerInput.includes('protein')) {\n      responseText = \"I can track your protein intake. Do you want to log your protein for today or see your progress?\";\n    } else if (lowerInput.includes('water')) {\n      responseText = \"I can monitor your water intake. Would you like to log a glass of water or check your daily intake?\";\n    } else if (lowerInput.includes('hi') || lowerInput.includes('hello') || lowerInput.includes('hey')) {\n      responseText = \"Hello! How can I assist you today? You can ask about expenses, groceries, salary, protein, or water intake.\";\n    }\n    return {\n      sender: 'bot',\n      text: responseText\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chatbot Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Type your message...\",\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"5T9mGH1XtiC467pqOMuWw2291HM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sender","text","handleInputChange","e","target","value","handleSendMessage","trim","userMessage","setTimeout","botResponse","generateBotResponse","prevMessages","userInput","lowerInput","toLowerCase","responseText","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","ref","type","onChange","placeholder","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ppush/Documents/Cline/Homemaker/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '../App.css';\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Initial bot message\r\n    setMessages([\r\n      { sender: 'bot', text: \"Hello! I'm your Homemaker assistant. How can I help you today? You can ask about expenses, groceries, salary, protein, or water intake.\" }\r\n    ]);\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (input.trim()) {\r\n      const userMessage = { sender: 'user', text: input };\r\n      setMessages([...messages, userMessage]);\r\n      setInput('');\r\n      // Simulate bot response\r\n      setTimeout(() => {\r\n        const botResponse = generateBotResponse(input);\r\n        setMessages(prevMessages => [...prevMessages, botResponse]);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  const generateBotResponse = (userInput) => {\r\n    const lowerInput = userInput.toLowerCase();\r\n    let responseText = \"I'm not sure how to help with that. Can you be more specific?\";\r\n\r\n    if (lowerInput.includes('expense')) {\r\n      responseText = \"I can help with tracking your expenses. Would you like to add a new expense or view your expense summary?\";\r\n    } else if (lowerInput.includes('grocery') || lowerInput.includes('groceries')) {\r\n      responseText = \"I can manage your grocery list. Do you want to add items to your shopping list or check your inventory?\";\r\n    } else if (lowerInput.includes('salary') || lowerInput.includes('income')) {\r\n      responseText = \"I can record your income. Would you like to add a new income entry or view your income history?\";\r\n    } else if (lowerInput.includes('protein')) {\r\n      responseText = \"I can track your protein intake. Do you want to log your protein for today or see your progress?\";\r\n    } else if (lowerInput.includes('water')) {\r\n      responseText = \"I can monitor your water intake. Would you like to log a glass of water or check your daily intake?\";\r\n    } else if (lowerInput.includes('hi') || lowerInput.includes('hello') || lowerInput.includes('hey')) {\r\n      responseText = \"Hello! How can I assist you today? You can ask about expenses, groceries, salary, protein, or water intake.\";\r\n    }\r\n\r\n    return { sender: 'bot', text: responseText };\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h2>Chatbot Assistant</h2>\r\n      <div className=\"chatbox\">\r\n        <div className=\"messages\">\r\n          {messages.map((msg, index) => (\r\n            <div key={index} className={`message ${msg.sender}`}>\r\n              <span>{msg.text}</span>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        <div className=\"input-area\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Type your message...\"\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n          />\r\n          <button onClick={handleSendMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
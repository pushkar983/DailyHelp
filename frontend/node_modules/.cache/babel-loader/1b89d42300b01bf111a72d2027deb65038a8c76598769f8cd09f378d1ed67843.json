{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ppush\\\\Documents\\\\Cline\\\\Homemaker\\\\frontend\\\\src\\\\components\\\\ProteinTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProteinTracker() {\n  _s();\n  const [proteinLogs, setProteinLogs] = useState([]);\n  const [newLog, setNewLog] = useState({\n    amount: '',\n    date: ''\n  });\n  const [dailyTotal, setDailyTotal] = useState(0);\n  const [goal, setGoal] = useState(100); // Default goal of 100g per day\n\n  useEffect(() => {\n    // Load protein logs from local storage on initial load\n    const storedLogs = JSON.parse(localStorage.getItem('proteinLogs')) || [];\n    const storedGoal = JSON.parse(localStorage.getItem('proteinGoal')) || 100;\n    setProteinLogs(storedLogs);\n    setGoal(storedGoal);\n    calculateDailyTotal(storedLogs);\n  }, []);\n  useEffect(() => {\n    // Save protein logs and goal to local storage whenever they change\n    localStorage.setItem('proteinLogs', JSON.stringify(proteinLogs));\n    localStorage.setItem('proteinGoal', JSON.stringify(goal));\n    calculateDailyTotal(proteinLogs);\n  }, [proteinLogs, goal]);\n  const calculateDailyTotal = logs => {\n    const today = new Date().toLocaleDateString();\n    const sum = logs.filter(log => log.date === today).reduce((acc, log) => acc + parseFloat(log.amount || 0), 0);\n    setDailyTotal(sum.toFixed(1));\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewLog({\n      ...newLog,\n      [name]: value\n    });\n  };\n  const handleGoalChange = e => {\n    setGoal(parseFloat(e.target.value) || 0);\n  };\n  const handleAddLog = () => {\n    if (newLog.amount && newLog.date) {\n      setProteinLogs([...proteinLogs, {\n        ...newLog,\n        id: Date.now()\n      }]);\n      setNewLog({\n        amount: '',\n        date: ''\n      });\n    }\n  };\n  const handleDeleteLog = id => {\n    setProteinLogs(proteinLogs.filter(log => log.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"protein-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Protein Intake Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goal-setting\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"goal\",\n        children: \"Daily Protein Goal (g): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"goal\",\n        value: goal,\n        onChange: handleGoalChange,\n        placeholder: \"Set Goal\",\n        step: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${Math.min(dailyTotal / goal * 100, 100)}%`\n        },\n        children: [dailyTotal, \"g / \", goal, \"g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-log\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        value: newLog.amount,\n        onChange: handleInputChange,\n        placeholder: \"Amount (g)\",\n        step: \"0.1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: newLog.date,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddLog,\n        children: \"Add Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-list\",\n      children: proteinLogs.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount (g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: proteinLogs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-btn\",\n                onClick: () => handleDeleteLog(log.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, log.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No protein intake logged yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ProteinTracker, \"zKLdjFy0E6cxCBCIwi4e0n5NFKU=\");\n_c = ProteinTracker;\nexport default ProteinTracker;\nvar _c;\n$RefreshReg$(_c, \"ProteinTracker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProteinTracker","_s","proteinLogs","setProteinLogs","newLog","setNewLog","amount","date","dailyTotal","setDailyTotal","goal","setGoal","storedLogs","JSON","parse","localStorage","getItem","storedGoal","calculateDailyTotal","setItem","stringify","logs","today","Date","toLocaleDateString","sum","filter","log","reduce","acc","parseFloat","toFixed","handleInputChange","e","name","value","target","handleGoalChange","handleAddLog","id","now","handleDeleteLog","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","placeholder","step","style","width","Math","min","onClick","length","map","_c","$RefreshReg$"],"sources":["C:/Users/ppush/Documents/Cline/Homemaker/frontend/src/components/ProteinTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\n\r\nfunction ProteinTracker() {\r\n  const [proteinLogs, setProteinLogs] = useState([]);\r\n  const [newLog, setNewLog] = useState({ amount: '', date: '' });\r\n  const [dailyTotal, setDailyTotal] = useState(0);\r\n  const [goal, setGoal] = useState(100); // Default goal of 100g per day\r\n\r\n  useEffect(() => {\r\n    // Load protein logs from local storage on initial load\r\n    const storedLogs = JSON.parse(localStorage.getItem('proteinLogs')) || [];\r\n    const storedGoal = JSON.parse(localStorage.getItem('proteinGoal')) || 100;\r\n    setProteinLogs(storedLogs);\r\n    setGoal(storedGoal);\r\n    calculateDailyTotal(storedLogs);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Save protein logs and goal to local storage whenever they change\r\n    localStorage.setItem('proteinLogs', JSON.stringify(proteinLogs));\r\n    localStorage.setItem('proteinGoal', JSON.stringify(goal));\r\n    calculateDailyTotal(proteinLogs);\r\n  }, [proteinLogs, goal]);\r\n\r\n  const calculateDailyTotal = (logs) => {\r\n    const today = new Date().toLocaleDateString();\r\n    const sum = logs\r\n      .filter(log => log.date === today)\r\n      .reduce((acc, log) => acc + parseFloat(log.amount || 0), 0);\r\n    setDailyTotal(sum.toFixed(1));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewLog({ ...newLog, [name]: value });\r\n  };\r\n\r\n  const handleGoalChange = (e) => {\r\n    setGoal(parseFloat(e.target.value) || 0);\r\n  };\r\n\r\n  const handleAddLog = () => {\r\n    if (newLog.amount && newLog.date) {\r\n      setProteinLogs([...proteinLogs, { ...newLog, id: Date.now() }]);\r\n      setNewLog({ amount: '', date: '' });\r\n    }\r\n  };\r\n\r\n  const handleDeleteLog = (id) => {\r\n    setProteinLogs(proteinLogs.filter(log => log.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"protein-container\">\r\n      <h2>Protein Intake Tracker</h2>\r\n      <div className=\"goal-setting\">\r\n        <label htmlFor=\"goal\">Daily Protein Goal (g): </label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"goal\"\r\n          value={goal}\r\n          onChange={handleGoalChange}\r\n          placeholder=\"Set Goal\"\r\n          step=\"1\"\r\n        />\r\n      </div>\r\n      <div className=\"progress-bar\">\r\n        <div\r\n          className=\"progress\"\r\n          style={{ width: `${Math.min((dailyTotal / goal) * 100, 100)}%` }}\r\n        >\r\n          {dailyTotal}g / {goal}g\r\n        </div>\r\n      </div>\r\n      <div className=\"add-log\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={newLog.amount}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Amount (g)\"\r\n          step=\"0.1\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={newLog.date}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddLog}>Add Log</button>\r\n      </div>\r\n      <div className=\"logs-list\">\r\n        {proteinLogs.length > 0 ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Amount (g)</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {proteinLogs.map(log => (\r\n                <tr key={log.id}>\r\n                  <td>{log.date}</td>\r\n                  <td>{log.amount}</td>\r\n                  <td>\r\n                    <button className=\"delete-btn\" onClick={() => handleDeleteLog(log.id)}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>No protein intake logged yet.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProteinTracker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC;IAAEU,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAC9D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAEvCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE;IACxE,MAAMC,UAAU,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,GAAG;IACzEb,cAAc,CAACS,UAAU,CAAC;IAC1BD,OAAO,CAACM,UAAU,CAAC;IACnBC,mBAAmB,CAACN,UAAU,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACd;IACAkB,YAAY,CAACI,OAAO,CAAC,aAAa,EAAEN,IAAI,CAACO,SAAS,CAAClB,WAAW,CAAC,CAAC;IAChEa,YAAY,CAACI,OAAO,CAAC,aAAa,EAAEN,IAAI,CAACO,SAAS,CAACV,IAAI,CAAC,CAAC;IACzDQ,mBAAmB,CAAChB,WAAW,CAAC;EAClC,CAAC,EAAE,CAACA,WAAW,EAAEQ,IAAI,CAAC,CAAC;EAEvB,MAAMQ,mBAAmB,GAAIG,IAAI,IAAK;IACpC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;IAC7C,MAAMC,GAAG,GAAGJ,IAAI,CACbK,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACpB,IAAI,KAAKe,KAAK,CAAC,CACjCM,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAKE,GAAG,GAAGC,UAAU,CAACH,GAAG,CAACrB,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7DG,aAAa,CAACgB,GAAG,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC/B,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAAC8B,IAAI,GAAGC;IAAM,CAAC,CAAC;EACzC,CAAC;EAED,MAAME,gBAAgB,GAAIJ,CAAC,IAAK;IAC9BtB,OAAO,CAACmB,UAAU,CAACG,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIlC,MAAM,CAACE,MAAM,IAAIF,MAAM,CAACG,IAAI,EAAE;MAChCJ,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;QAAE,GAAGE,MAAM;QAAEmC,EAAE,EAAEhB,IAAI,CAACiB,GAAG,CAAC;MAAE,CAAC,CAAC,CAAC;MAC/DnC,SAAS,CAAC;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC,CAAC;IACrC;EACF,CAAC;EAED,MAAMkC,eAAe,GAAIF,EAAE,IAAK;IAC9BpC,cAAc,CAACD,WAAW,CAACwB,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACY,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC1D,CAAC;EAED,oBACExC,OAAA;IAAK2C,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC5C,OAAA;MAAA4C,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BhD,OAAA;MAAK2C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B5C,OAAA;QAAOiD,OAAO,EAAC,MAAM;QAAAL,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtDhD,OAAA;QACEkD,IAAI,EAAC,QAAQ;QACbV,EAAE,EAAC,MAAM;QACTJ,KAAK,EAAEzB,IAAK;QACZwC,QAAQ,EAAEb,gBAAiB;QAC3Bc,WAAW,EAAC,UAAU;QACtBC,IAAI,EAAC;MAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhD,OAAA;MAAK2C,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3B5C,OAAA;QACE2C,SAAS,EAAC,UAAU;QACpBW,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAEhD,UAAU,GAAGE,IAAI,GAAI,GAAG,EAAE,GAAG,CAAC;QAAI,CAAE;QAAAiC,QAAA,GAEhEnC,UAAU,EAAC,MAAI,EAACE,IAAI,EAAC,GACxB;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNhD,OAAA;MAAK2C,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtB5C,OAAA;QACEkD,IAAI,EAAC,QAAQ;QACbf,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAE/B,MAAM,CAACE,MAAO;QACrB4C,QAAQ,EAAElB,iBAAkB;QAC5BmB,WAAW,EAAC,YAAY;QACxBC,IAAI,EAAC;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFhD,OAAA;QACEkD,IAAI,EAAC,MAAM;QACXf,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE/B,MAAM,CAACG,IAAK;QACnB2C,QAAQ,EAAElB;MAAkB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFhD,OAAA;QAAQ0D,OAAO,EAAEnB,YAAa;QAAAK,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACNhD,OAAA;MAAK2C,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBzC,WAAW,CAACwD,MAAM,GAAG,CAAC,gBACrB3D,OAAA;QAAA4C,QAAA,gBACE5C,OAAA;UAAA4C,QAAA,eACE5C,OAAA;YAAA4C,QAAA,gBACE5C,OAAA;cAAA4C,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbhD,OAAA;cAAA4C,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBhD,OAAA;cAAA4C,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRhD,OAAA;UAAA4C,QAAA,EACGzC,WAAW,CAACyD,GAAG,CAAChC,GAAG,iBAClB5B,OAAA;YAAA4C,QAAA,gBACE5C,OAAA;cAAA4C,QAAA,EAAKhB,GAAG,CAACpB;YAAI;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnBhD,OAAA;cAAA4C,QAAA,EAAKhB,GAAG,CAACrB;YAAM;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBhD,OAAA;cAAA4C,QAAA,eACE5C,OAAA;gBAAQ2C,SAAS,EAAC,YAAY;gBAACe,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAACd,GAAG,CAACY,EAAE,CAAE;gBAAAI,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpF,CAAC;UAAA,GALEpB,GAAG,CAACY,EAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMX,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAERhD,OAAA;QAAA4C,QAAA,EAAG;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACpC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9C,EAAA,CArHQD,cAAc;AAAA4D,EAAA,GAAd5D,cAAc;AAuHvB,eAAeA,cAAc;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}